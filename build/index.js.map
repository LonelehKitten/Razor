{"version":3,"file":"index.js","mappings":"mBACO,IAAIA,EAA6B,KCExC,MAAMC,EAIuB,qBAIrB,OAHyB,OAAtBA,EAASC,eAA2CC,IAAtBF,EAASC,WACtCD,EAASC,SAAW,IAAID,GAErBA,EAASC,SAGbE,KAAO,KACVC,KAAKC,MACLC,sBAAsBF,KAAKD,OAGvBE,MACJN,EAAGQ,MAAMR,EAAGS,mBAKpB,UCpBA,MAEI,IAAIC,EAAS,ICDjB,MAISC,cACLN,KAAKO,UAAYX,EAAAA,cAGZY,QACLR,KAAKS,QHZT,MAEsB,cACd,IAAIC,EAASC,SAASC,cAAc,UAGpC,GAFAD,SAASE,KAAKC,YAAYJ,QAEhBZ,KADVH,EAAKe,EAAOK,WAAW,UAEnB,MAAM,IAAIC,MAAM,+BAGpB,OAAON,IGEIO,OACfjB,KAAKkB,SACLvB,EAAGwB,WAAW,EAAG,EAAG,EAAG,GACvBnB,KAAKO,UAAUR,OAGVmB,SACL,QAAoBpB,IAAjBE,KAAKS,QACJ,MAAM,IAAIO,MAAM,+BAGpBhB,KAAKS,QAAQW,MAAQC,OAAOC,WAC5BtB,KAAKS,QAAQc,OAASF,OAAOG,cDlB7BH,OAAOI,OAAS,KACdpB,EAAOG,QAEP,IAAIkB,EAAuBf,SAASC,cAAc,QEXxD,MAC4B,kBAACe,GACrB,IAAIC,EAQJ,aANMC,MAAMF,GACXG,MAAKC,GAAOA,EAAIlB,OAChBiB,MAAKE,MAAAA,IACFJ,EAASf,EAAKoB,qBAGLL,EAAOM,OACfJ,MAAMK,IAAW,IAAIC,aAAcC,OAAOF,EAAOG,YFCxDC,KAAgB,+BACbT,MAAMU,GAASd,EAAIe,UAAYD,IAEhC7B,SAASE,KAAKC,YAAYY,IAG9BL,OAAOqB,SAAW,KAChBrC,EAAOa,WAfb,I","sources":["webpack://razor/./src/engine/gl/GLUtils.ts","webpack://razor/./src/engine/core/GameLoop.ts","webpack://razor/./src/main.ts","webpack://razor/./src/engine/core/Razor.ts","webpack://razor/./src/engine/loaders/FileLoader.ts"],"sourcesContent":["\nexport var gl : WebGLRenderingContext = null;\n\nclass GLUtils {\n\n    public static init(): HTMLCanvasElement {\n        let canvas = document.createElement('canvas') as HTMLCanvasElement;\n        document.body.appendChild(canvas);\n        gl = canvas.getContext('webgl');\n        if(gl === undefined) {\n            throw new Error('Unable to initialize WebGL!');\n        }\n\n        return canvas;\n    }\n\n}\n\nexport default GLUtils;\n","import { gl } from \"../gl/GLUtils\";\n\n\nclass GameLoop {\n\n    private static instance: GameLoop;\n\n    public static getInstance(): GameLoop {\n        if(GameLoop.instance === null || GameLoop.instance === undefined) {\n            GameLoop.instance = new GameLoop();\n        }\n        return GameLoop.instance;\n    }\n\n    public loop = () : void => {\n        this.run();\n        requestAnimationFrame(this.loop);\n    }\n\n    private run() : void {\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n\n}\n\nexport default GameLoop;","import Razor from \"./engine/core/Razor\";\nimport FileLoader from \"./engine/loaders/FileLoader\"\n\n//import TestGLSL from './resources/shader/test.glsl';\n\n(() => {\n\n    let engine = new Razor();\n\n    window.onload = () => {\n      engine.start();\n\n      let div : HTMLDivElement = document.createElement(\"div\") as HTMLDivElement;\n      FileLoader.load('/resources/shader/test.glsl')\n        .then((file) => div.innerText = file);\n        //div.innerText = TestGLSL;\n        document.body.appendChild(div);\n    };\n    \n    window.onresize = () => {\n      engine.resize();\n    }\n\n})();\n","import GLUtils, { gl } from '../gl/GLUtils';\nimport GameLoop from './GameLoop';\n\n/**\n * Canvas management class\n */\nclass Razor {\n  private _gameLoop: GameLoop;\n  private _canvas: HTMLCanvasElement;\n\n  public constructor() {\n    this._gameLoop = GameLoop.getInstance();\n  }\n\n  public start() : void {\n    this._canvas = GLUtils.init();\n    this.resize();\n    gl.clearColor(0, 0, 0, 1);\n    this._gameLoop.loop();\n  }\n\n  public resize() : void {\n    if(this._canvas === undefined) {\n        throw new Error('Canvas was not initialized!');\n    }\n\n    this._canvas.width = window.innerWidth;\n    this._canvas.height = window.innerHeight;\n  }\n}\n\nexport default Razor;\n","\nclass FileLoader {\n    public static async load(pathname: string) : Promise<string> {\n        let reader;\n\n        await fetch(pathname)\n        .then(res => res.body)\n        .then(async body => {\n            reader = body.getReader()\n        })\n\n        return await reader.read()\n            .then((stream) => new TextDecoder().decode(stream.value))\n    }\n}\n\nexport default FileLoader;"],"names":["gl","GameLoop","instance","undefined","loop","this","run","requestAnimationFrame","clear","COLOR_BUFFER_BIT","engine","constructor","_gameLoop","start","_canvas","canvas","document","createElement","body","appendChild","getContext","Error","GLUtils","resize","clearColor","width","window","innerWidth","height","innerHeight","onload","div","pathname","reader","fetch","then","res","async","getReader","read","stream","TextDecoder","decode","value","FileLoader","file","innerText","onresize"],"sourceRoot":""}